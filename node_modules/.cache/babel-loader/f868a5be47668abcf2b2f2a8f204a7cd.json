{"ast":null,"code":"import _classCallCheck from \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/src/App.js\";\nimport React from \"react\";\nimport HelloDiv from \"./components/HelloDiv/HelloDiv\";\nimport Main from \"./components/Main/Main\";\nimport Navbar from \"./components/Nav/Navbar\";\nimport Characters from \"./characters.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Characters: Characters,\n      currentScore: 0,\n      // topScore: 0,\n      clickedCharacter: [] // chosenCharacter: false\n\n    };\n\n    _this.resetGame = function () {\n      _this.state.currentScore = 0;\n      alert(\"Sorry game has ended, feel free to try again!\");\n      Characters.sort(function (a, b) {\n        return 0.5 - Math.random();\n      }); // this.setState({ currentScore});\n      // this.setState({ Characters });\n    };\n\n    _this.handleClick = function (id) {\n      // let clickedCharacter = this.state.clickedCharacter;\n      var currentScore = _this.state.currentScore; // let topScore = this.state.topScore;\n\n      console.log(id);\n      console.log(_this.state.clickedCharacter);\n\n      if (_this.state.clickedCharacter.indexOf(id) === -1) {\n        alert(id); //if the clicked character indexOf id in array is not equal to clicked this.id\n        // then psuh into clickedCharacter id\n\n        _this.state.clickedCharacter.push(id); //add one to current score\n\n\n        currentScore++; //shuffle cards function\n\n        Characters.sort(function (a, b) {\n          return 0.5 - Math.random();\n        }); //set new states(why do I have to do this)\n\n        _this.setState({\n          Characters: Characters\n        });\n\n        _this.setState({\n          currentScore: currentScore\n        });\n\n        console.log(currentScore); // this.setState({clickMessage});\n      } else {\n        _this.resetGame();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.currentScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(HelloDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.Characters.map(function (Character, i) {\n        return React.createElement(Main, {\n          key: i,\n          id: Character.id,\n          name: Character.name,\n          image: Character.image,\n          handleClick: _this2.handleClick,\n          resetGame: _this2.resetGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolerichardson/Documents/FullStackClass/homework15/clickygame/src/App.js"],"names":["React","HelloDiv","Main","Navbar","Characters","App","state","currentScore","clickedCharacter","resetGame","alert","sort","a","b","Math","random","handleClick","id","console","log","indexOf","push","setState","map","Character","i","name","image","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;IAGMC,G;;;;;;;;;;;;;;;;;UAIFC,K,GAAQ;AACNF,MAAAA,UAAU,EAAVA,UADM;AAENG,MAAAA,YAAY,EAAE,CAFR;AAGN;AACAC,MAAAA,gBAAgB,EAAE,EAJZ,CAKN;;AALM,K;;UAUTC,S,GAAY,YAAM;AACjB,YAAKH,KAAL,CAAWC,YAAX,GAA0B,CAA1B;AAEAG,MAAAA,KAAK,CAAC,+CAAD,CAAL;AAEAN,MAAAA,UAAU,CAACO,IAAX,CAAgB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAAC,eAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AAA2B,OAA1D,EALiB,CAOjB;AACA;AACD,K;;UAEAC,W,GAAc,UAACC,EAAD,EAAQ;AAErB;AACA,UAAIV,YAAY,GAAG,MAAKD,KAAL,CAAWC,YAA9B,CAHqB,CAIrB;;AACGW,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKb,KAAL,CAAWE,gBAAvB;;AAEH,UAAI,MAAKF,KAAL,CAAWE,gBAAX,CAA4BY,OAA5B,CAAoCH,EAApC,MAA4C,CAAC,CAAjD,EAAoD;AAClDP,QAAAA,KAAK,CAACO,EAAD,CAAL,CADkD,CAGhD;AACD;;AACD,cAAKX,KAAL,CAAWE,gBAAX,CAA4Ba,IAA5B,CAAiCJ,EAAjC,EALkD,CAMlD;;;AACAV,QAAAA,YAAY,GAPsC,CAQlD;;AACAH,QAAAA,UAAU,CAACO,IAAX,CAAgB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAAC,iBAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AAA2B,SAA1D,EATkD,CAWlD;;AAEA,cAAKO,QAAL,CAAc;AAAElB,UAAAA,UAAU,EAAVA;AAAF,SAAd;;AACA,cAAKkB,QAAL,CAAc;AAAEf,UAAAA,YAAY,EAAZA;AAAF,SAAd;;AAEAW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ,EAhBkD,CAiBlD;AAED,OAnBD,MAqBM;AACJ,cAAKE,SAAL;AACD;AAGF,K;;;;;;;6BAGU;AAAA;;AACP,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAIA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWF,UAAX,CAAsBmB,GAAtB,CAA0B,UAACC,SAAD,EAAYC,CAAZ;AAAA,eACzB,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,EAAE,EAAED,SAAS,CAACP,EAFhB;AAGE,UAAA,IAAI,EAAEO,SAAS,CAACE,IAHlB;AAIE,UAAA,KAAK,EAAEF,SAAS,CAACG,KAJnB;AAKE,UAAA,WAAW,EAAE,MAAI,CAACX,WALpB;AAME,UAAA,SAAS,EAAE,MAAI,CAACP,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,OAA1B,CADH,CAPJ,CADE;AAuBK;;;;EAtFOT,KAAK,CAAC4B,S;;AA0FxB,eAAevB,GAAf","sourcesContent":["import React from \"react\";\nimport HelloDiv from \"./components/HelloDiv/HelloDiv\";\nimport Main from \"./components/Main/Main\";\nimport Navbar from \"./components/Nav/Navbar\";\nimport Characters from \"./characters.json\";\n\n\nclass App extends React.Component {\n\n  // const clickedCharacter = clickedCharacter\n    // Setting this.state.friends to the friends json array\n    state = {\n      Characters,\n      currentScore: 0,\n      // topScore: 0,\n      clickedCharacter: []\n      // chosenCharacter: false\n\n    };\n  \n   // Map over this.state.friends and render a FriendCard component for each friend object\n   resetGame = () => {\n    this.state.currentScore = 0;\n\n    alert(\"Sorry game has ended, feel free to try again!\");\n\n    Characters.sort(function(a, b){return 0.5 - Math.random()});\n\n    // this.setState({ currentScore});\n    // this.setState({ Characters });\n  };\n  \n   handleClick = (id) => {\n     \n    // let clickedCharacter = this.state.clickedCharacter;\n    let currentScore = this.state.currentScore;\n    // let topScore = this.state.topScore;\n       console.log(id)\n       console.log(this.state.clickedCharacter)\n\n    if (this.state.clickedCharacter.indexOf(id) === -1) {\n      alert(id);\n       \n        //if the clicked character indexOf id in array is not equal to clicked this.id\n       // then psuh into clickedCharacter id\n      this.state.clickedCharacter.push(id);\n      //add one to current score\n      currentScore++;\n      //shuffle cards function\n      Characters.sort(function(a, b){return 0.5 - Math.random()});\n\n      //set new states(why do I have to do this)\n\n      this.setState({ Characters });\n      this.setState({ currentScore });\n\n      console.log(currentScore);\n      // this.setState({clickMessage});\n\n    }\n\n    else  {\n      this.resetGame();\n    }\n\n\n  };\n\n\n    render() {\n      return (\n    <div>\n        <div>\n        <Navbar \n        score={this.state.currentScore}\n        />\n        <HelloDiv />\n        </div>\n        <div>\n          {this.state.Characters.map((Character, i) => (\n            <Main\n              key={i}\n              id={Character.id}\n              name={Character.name}\n              image={Character.image}\n              handleClick={this.handleClick}\n              resetGame={this.resetGame}\n            />\n          ))}\n        </div>\n    </div>\n      );\n    \n          }\n\n        }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}